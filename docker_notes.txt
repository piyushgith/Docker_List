#print container details
sudo docker container ls -a

#print container id
sudo docker container ls -qa

#stop container
sudo docker container stop CONTAINER efad16427614

#start container
sudo docker container start CONTAINER 0169a13b6bbf

sudo docker container ls -qa

#best to use
sudo docker container prune

#use as last resort
#sudo docker system prune -a

The first thing you need to do is to get inside the container and then try to execute your command.

Follow these steps:

Use docker ps to see the name of the existing container ==> sudo docker container ls -a

Then use the command ==> sudo docker exec -it <container name> /bin/bash 
to get a bash shell in the container.
Or
directly use ==> sudo docker exec -it <container name> <command> 
to execute whatever command you specify in the container.


#How to create image springboot
sudo docker build -t bootjwt -f ./Dockerfile .  

sudo docker build -t bootjwt -f ./Dockerfile .

#how to run image
sudo docker run -p 8080:8080 -t bootjwt 

#stop multiple 
sudo docker container stop CONTAINER 07df7d543197 02368d4e3826 8609a8f0bcea 45536e9d665a a17908249b14 f9b05f10a24a

#work with docker-compose.yml only
sudo docker-compose up

sudo docker container ls -a

#best tool for monitoring  admin/password

sudo docker run -d -p 9900:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer


sudo docker container ls -qa

#best 
sudo docker container prune

#use as last resort
#sudo docker system prune -a


